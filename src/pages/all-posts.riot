<all-posts>
  <h1>My Notes App</h1>
  <app-form observable={ obs }/>
  <hr />
  <post-list notes={ state.notes } />

  <script>
    import { API, Storage } from 'aws-amplify'
    import { listNotes } from '../graphql/queries'
    import {
      createNote as createNoteMutation,
      deleteNote as deleteNoteMutation
    } from '../graphql/mutations'
    import observable from '@riotjs/observable'
    import AppForm from '../components/app-form.riot'
    import PostList from '../components/post-list.riot'

    export default {
      state: {
        notes: [],
        isActive: false
      },
      components: {
        AppForm,
        PostList
      },
      onBeforeMount() {
        this.obs = observable(this)
        this.fetchNotes()
      },
      onMounted() {
        this.on('create note', (formData) => {
          API.graphql({
            query: createNoteMutation,
            variables: {
              input: formData
            }
          })
          .then(e => {
            if (formData.image) {
              Storage
                .get(formData.image)
                .then(image => {
                  formData.image = image
                })
            }
            this.setNotes(formData)
            this.trigger('clear form')
          })
        })
      },
      fetchNotes() {
        API.graphql({
          query: listNotes
        })
        .then(apiData => {
          const notesFromAPI = apiData.data.listNotes.items

          // Only image data will have a Promise object set
          notesFromAPI.map(note => {
            if (note.image) {
              Storage
                .get(note.image)
                .then(image => {
                  note.image = image
                })
            }
            return note
          })
          this.state.notes = apiData.data.listNotes.items
          setTimeout(() => {
            this.update()
          }, 300)
        })
      },
      setNotes(val) {
        setTimeout(() => {
          this.update({
            notes: [ val, ...this.state.notes || null ]
          })
        }, 300)
      }
    }
  </script>

  <style>
    .form-wrapper {
      display: flex;
      flex-direction: column;
      margin-bottom: 30px;
    }
    .form-item {
      display: flex;
      flex-direction: column;
    }
    .form-item input {
      padding: 5px;
      font-size: 1rem;
    }
    .form-item + .form-item {
      margin: 15px 0 0;
    }
    cancel-button {
      margin-left: 10px;
    }
  </style>
</all-posts>